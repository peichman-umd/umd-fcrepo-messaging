<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
  http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

  <routeContext xmlns="http://camel.apache.org/schema/spring" id="Indexing">
    <route id="edu.umd.lib.camel.routes.queue.index">
      <from uri="activemq:index"/>
      <choice>
        <when>
          <header>CamelFcrepoIndexingDestinations</header>
          <log loggingLevel="DEBUG" message="Sending to ${header.CamelFcrepoIndexingDestinations}"/>
          <recipientList ignoreInvalidEndpoints="true" parallelProcessing="true">
            <header>CamelFcrepoIndexingDestinations</header>
          </recipientList>
        </when>
        <otherwise>
          <log loggingLevel="DEBUG" message="Sending to all indexing destinations"/>
          <multicast parallelProcessing="true">
            <to uri="activemq:index.triplestore"/>
            <to uri="activemq:index.solr"/>
          </multicast>
        </otherwise>
      </choice>
    </route>

    <route id="edu.umd.lib.camel.routes.queue.reindex">
      <from uri="activemq:reindex"/>
      <log loggingLevel="INFO" message="Reindexing resource ${header.CamelFcrepoUri}"/>
      <!-- a request to reindex should be treated the same as if the resource was updated -->
      <setHeader headerName="CamelFcrepoEventName">
        <constant>update</constant>
      </setHeader>
      <to uri="activemq:index"/>
    </route>
  </routeContext>
</beans>