{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview","title":"Home"},{"location":"#overview","text":"","title":"Overview"},{"location":"config/","text":"Configuration Environment Variables AUDIT_EVENT_BASE_URI AUDIT_TRIPLESTORE_UPDATE_URI BATCH_USER JWT_SECRET Shared secret with the fcrepo repository, used to generate short-lived JWT authorization tokens. REPO_EXTERNAL_URL REPO_INTERNAL_URL SMTP_SERVER Outgoing SMTP server. Java Beans addBearerAuthorization Class: edu.umd.lib.camel.processors.AddBearerAuthorizationProcessor Camel processor that uses the JWT_SECRET shared secret to generate a JWT token that is valid for 1 hour. It then adds the Authorization: Bearer {JWT token} header to the message headers, in anticipation of the message being routed to an HTTP endpoint. auditDatabase Class: javax.sql.DataSource Data source for reading from and writing to the audit database. The current architecture uses an org.postgresql.ds.PGSimpleDataSource bean to connect to a Postgres database. Connection information for the bean is provided through AUDIT_DB_* environment variables: AUDIT_DB_HOST AUDIT_DB_PORT AUDIT_DB_NAME (database name) AUDIT_DB_USERNAME AUDIT_DB_PASSWORD eventProcessor Class: org.fcrepo.camel.processor.EventProcessor fixityAuditSparqlProcessor Class : edu.umd.lib.camel.processors.SparqlQueryProcessor fixityLogSparqlProcessor Class: edu.umd.lib.camel.processors.SparqlQueryProcessor repoExternalUrl Class: java.net.URL Java object representing the REPO_EXTERNAL_URL . Used when other beans require a URL object instead of a string.","title":"Configuration"},{"location":"config/#configuration","text":"","title":"Configuration"},{"location":"config/#environment-variables","text":"","title":"Environment Variables"},{"location":"config/#audit_event_base_uri","text":"","title":"AUDIT_EVENT_BASE_URI"},{"location":"config/#audit_triplestore_update_uri","text":"","title":"AUDIT_TRIPLESTORE_UPDATE_URI"},{"location":"config/#batch_user","text":"","title":"BATCH_USER"},{"location":"config/#jwt_secret","text":"Shared secret with the fcrepo repository, used to generate short-lived JWT authorization tokens.","title":"JWT_SECRET"},{"location":"config/#repo_external_url","text":"","title":"REPO_EXTERNAL_URL"},{"location":"config/#repo_internal_url","text":"","title":"REPO_INTERNAL_URL"},{"location":"config/#smtp_server","text":"Outgoing SMTP server.","title":"SMTP_SERVER"},{"location":"config/#java-beans","text":"","title":"Java Beans"},{"location":"config/#addbearerauthorization","text":"Class: edu.umd.lib.camel.processors.AddBearerAuthorizationProcessor Camel processor that uses the JWT_SECRET shared secret to generate a JWT token that is valid for 1 hour. It then adds the Authorization: Bearer {JWT token} header to the message headers, in anticipation of the message being routed to an HTTP endpoint.","title":"addBearerAuthorization"},{"location":"config/#auditdatabase","text":"Class: javax.sql.DataSource Data source for reading from and writing to the audit database. The current architecture uses an org.postgresql.ds.PGSimpleDataSource bean to connect to a Postgres database. Connection information for the bean is provided through AUDIT_DB_* environment variables: AUDIT_DB_HOST AUDIT_DB_PORT AUDIT_DB_NAME (database name) AUDIT_DB_USERNAME AUDIT_DB_PASSWORD","title":"auditDatabase"},{"location":"config/#eventprocessor","text":"Class: org.fcrepo.camel.processor.EventProcessor","title":"eventProcessor"},{"location":"config/#fixityauditsparqlprocessor","text":"Class : edu.umd.lib.camel.processors.SparqlQueryProcessor","title":"fixityAuditSparqlProcessor"},{"location":"config/#fixitylogsparqlprocessor","text":"Class: edu.umd.lib.camel.processors.SparqlQueryProcessor","title":"fixityLogSparqlProcessor"},{"location":"config/#repoexternalurl","text":"Class: java.net.URL Java object representing the REPO_EXTERNAL_URL . Used when other beans require a URL object instead of a string.","title":"repoExternalUrl"},{"location":"headers/","text":"Message Headers CamelAuditEventType URI used in creating the PREMIS audit record. These each correspond to one of the CamelFcrepoEventName values. create binary: http://id.loc.gov/vocabulary/preservation/eventType/ing create RDF: http://id.loc.gov/vocabulary/preservation/eventType/cre update binary: http://fedora.info/definitions/v4/audit#contentModification update RDF: http://fedora.info/definitions/v4/audit#metadataModification delete binary: http://fedora.info/definitions/v4/audit#contentRemoval delete RDF: http://id.loc.gov/vocabulary/preservation/eventType/del Values come from one of these vocabularies: Event Type - LC Linked Data Service Vocabularies Fedora Commons Repository - Audit Types CamelAuditEventUri URI for the event created from a base URL plus the CamelFcrepoEventId . CamelFcrepoBinary Set to true if the resource is a binary. CamelFcrepoDateTime Timestamp of the request to fcrepo, in ISO 8601 datetime format. CamelFcrepoEventId UUID URN ( urn:uuid:... ) generated by fcrepo that uniquely identifies an event. CamelFcrepoEventName Short text description of the event and resource types. Expected values are: create RDF update RDF delete RDF create binary update binary delete binary Before determination of the resource type, the value may just be one of: create update delete However, this should only matter to the internals of the initial routing context. CamelFcrepoEventType URI set by fcrepo from a vocabulary identifying a type of repository event, from one of these vocabularies: Fedora Commons Event Ontology ActivityStreams 2.0 Terms Expected values are: Resource creation http://fedora.info/definitions/v4/event#ResourceCreation https://www.w3.org/ns/activitystreams#Create Resource modification http://fedora.info/definitions/v4/event#ResourceModification https://www.w3.org/ns/activitystreams#Update Resource deletion http://fedora.info/definitions/v4/event#ResourceDeletion https://www.w3.org/ns/activitystreams#Delete CamelFcrepoPath Path to the resource in fcrepo. CamelFcrepoResourceType RDF types of the resource. CamelFcrepoUri Full URI of the resource in fcrepo. CamelFcrepoUser Username of the user accessing the fcrepo REST API. CamelFcrepoUserAgent User-agent string for the user accessing the fcrepo REST API.","title":"Message Headers"},{"location":"headers/#message-headers","text":"","title":"Message Headers"},{"location":"headers/#camelauditeventtype","text":"URI used in creating the PREMIS audit record. These each correspond to one of the CamelFcrepoEventName values. create binary: http://id.loc.gov/vocabulary/preservation/eventType/ing create RDF: http://id.loc.gov/vocabulary/preservation/eventType/cre update binary: http://fedora.info/definitions/v4/audit#contentModification update RDF: http://fedora.info/definitions/v4/audit#metadataModification delete binary: http://fedora.info/definitions/v4/audit#contentRemoval delete RDF: http://id.loc.gov/vocabulary/preservation/eventType/del Values come from one of these vocabularies: Event Type - LC Linked Data Service Vocabularies Fedora Commons Repository - Audit Types","title":"CamelAuditEventType"},{"location":"headers/#camelauditeventuri","text":"URI for the event created from a base URL plus the CamelFcrepoEventId .","title":"CamelAuditEventUri"},{"location":"headers/#camelfcrepobinary","text":"Set to true if the resource is a binary.","title":"CamelFcrepoBinary"},{"location":"headers/#camelfcrepodatetime","text":"Timestamp of the request to fcrepo, in ISO 8601 datetime format.","title":"CamelFcrepoDateTime"},{"location":"headers/#camelfcrepoeventid","text":"UUID URN ( urn:uuid:... ) generated by fcrepo that uniquely identifies an event.","title":"CamelFcrepoEventId"},{"location":"headers/#camelfcrepoeventname","text":"Short text description of the event and resource types. Expected values are: create RDF update RDF delete RDF create binary update binary delete binary Before determination of the resource type, the value may just be one of: create update delete However, this should only matter to the internals of the initial routing context.","title":"CamelFcrepoEventName"},{"location":"headers/#camelfcrepoeventtype","text":"URI set by fcrepo from a vocabulary identifying a type of repository event, from one of these vocabularies: Fedora Commons Event Ontology ActivityStreams 2.0 Terms Expected values are: Resource creation http://fedora.info/definitions/v4/event#ResourceCreation https://www.w3.org/ns/activitystreams#Create Resource modification http://fedora.info/definitions/v4/event#ResourceModification https://www.w3.org/ns/activitystreams#Update Resource deletion http://fedora.info/definitions/v4/event#ResourceDeletion https://www.w3.org/ns/activitystreams#Delete","title":"CamelFcrepoEventType"},{"location":"headers/#camelfcrepopath","text":"Path to the resource in fcrepo.","title":"CamelFcrepoPath"},{"location":"headers/#camelfcreporesourcetype","text":"RDF types of the resource.","title":"CamelFcrepoResourceType"},{"location":"headers/#camelfcrepouri","text":"Full URI of the resource in fcrepo.","title":"CamelFcrepoUri"},{"location":"headers/#camelfcrepouser","text":"Username of the user accessing the fcrepo REST API.","title":"CamelFcrepoUser"},{"location":"headers/#camelfcrepouseragent","text":"User-agent string for the user accessing the fcrepo REST API.","title":"CamelFcrepoUserAgent"},{"location":"contexts/","text":"Camel Contexts fcrepo Plastron fedora index audit fixity reindex index.solr index.triplestore audit.triplestore fixitycandidates images \u00abContext\u00bb UmdFcrepoEventRouter \u00abContext\u00bb Indexing \u00abContext\u00bb SolrIndex \u00abContext\u00bb Triplestore \u00abContext\u00bb Auditing \u00abContext\u00bb FixityChecking \u00abDatabase\u00bb audit Solr Fuseki \u00abCronjob\u00bb Nightly Fixity Check \u00abLog File\u00bb \u00abEmail Address\u00bb Image Fetcher","title":"Overview"},{"location":"contexts/#camel-contexts","text":"fcrepo Plastron fedora index audit fixity reindex index.solr index.triplestore audit.triplestore fixitycandidates images \u00abContext\u00bb UmdFcrepoEventRouter \u00abContext\u00bb Indexing \u00abContext\u00bb SolrIndex \u00abContext\u00bb Triplestore \u00abContext\u00bb Auditing \u00abContext\u00bb FixityChecking \u00abDatabase\u00bb audit Solr Fuseki \u00abCronjob\u00bb Nightly Fixity Check \u00abLog File\u00bb \u00abEmail Address\u00bb Image Fetcher","title":"Camel Contexts"},{"location":"contexts/auditing/","text":"Camel Contexts: Auditing Routes Audit edu.umd.lib.camel.routes.Audit Creates the CamelAuditEventUri header from the AUDIT_EVENT_BASE_URI environment variable and the CamelFcrepoEventId message header. Dispatches to the AuditDatabase and GeneratePremis routes. Input message headers CamelFcrepoUri CamelFcrepoEventId CamelFcrepoEventName Environment variables AUDIT_EVENT_BASE_URI Added message headers CamelAuditEventUri GeneratePremis edu.umd.lib.camel.routes.GeneratePremis Generate an RDF representation of the event using the PREMIS v1 vocabulary, suitable for sending to the AuditTriplestore route. Input message headers CamelAuditEventUri CamelFcrepoDateTime CamelFcrepoUser CamelFcrepoUserAgent CamelAuditEventType Output message format application/n-triples AuditDatabase edu.umd.lib.camel.routes.AuditDatabase Record event information to an audit database. Connection information for the database should be given via an auditDatabase Java bean, which must be a javax.sql.DataSource . The database must have a table named history , with columns: event_uri event_type username resource_uri timestamp Input message headers CamelAuditEventUri CamelAuditEventType CamelFcrepoUser CamelFcrepoUri CamelFcrepoDateTime Java beans auditDatabase AuditTriplestore edu.umd.lib.camel.routes.AuditTriplestore Wraps its input body in an INSERT DATA { ... } SPARQL Update Query and sends it via HTTP POST to the AUDIT_TRIPLESTORE_UPDATE_URI set in the environment. Input message body format application/n-triples Environment variables AUDIT_TRIPLESTORE_UPDATE_URI","title":"Auditing"},{"location":"contexts/auditing/#camel-contexts-auditing","text":"","title":"Camel Contexts: Auditing"},{"location":"contexts/auditing/#routes","text":"","title":"Routes"},{"location":"contexts/auditing/#audit","text":"edu.umd.lib.camel.routes.Audit Creates the CamelAuditEventUri header from the AUDIT_EVENT_BASE_URI environment variable and the CamelFcrepoEventId message header. Dispatches to the AuditDatabase and GeneratePremis routes.","title":"Audit"},{"location":"contexts/auditing/#input-message-headers","text":"CamelFcrepoUri CamelFcrepoEventId CamelFcrepoEventName","title":"Input message headers"},{"location":"contexts/auditing/#environment-variables","text":"AUDIT_EVENT_BASE_URI","title":"Environment variables"},{"location":"contexts/auditing/#added-message-headers","text":"CamelAuditEventUri","title":"Added message headers"},{"location":"contexts/auditing/#generatepremis","text":"edu.umd.lib.camel.routes.GeneratePremis Generate an RDF representation of the event using the PREMIS v1 vocabulary, suitable for sending to the AuditTriplestore route.","title":"GeneratePremis"},{"location":"contexts/auditing/#input-message-headers_1","text":"CamelAuditEventUri CamelFcrepoDateTime CamelFcrepoUser CamelFcrepoUserAgent CamelAuditEventType","title":"Input message headers"},{"location":"contexts/auditing/#output-message-format","text":"application/n-triples","title":"Output message format"},{"location":"contexts/auditing/#auditdatabase","text":"edu.umd.lib.camel.routes.AuditDatabase Record event information to an audit database. Connection information for the database should be given via an auditDatabase Java bean, which must be a javax.sql.DataSource . The database must have a table named history , with columns: event_uri event_type username resource_uri timestamp","title":"AuditDatabase"},{"location":"contexts/auditing/#input-message-headers_2","text":"CamelAuditEventUri CamelAuditEventType CamelFcrepoUser CamelFcrepoUri CamelFcrepoDateTime","title":"Input message headers"},{"location":"contexts/auditing/#java-beans","text":"auditDatabase","title":"Java beans"},{"location":"contexts/auditing/#audittriplestore","text":"edu.umd.lib.camel.routes.AuditTriplestore Wraps its input body in an INSERT DATA { ... } SPARQL Update Query and sends it via HTTP POST to the AUDIT_TRIPLESTORE_UPDATE_URI set in the environment.","title":"AuditTriplestore"},{"location":"contexts/auditing/#input-message-body-format","text":"application/n-triples","title":"Input message body format"},{"location":"contexts/auditing/#environment-variables_1","text":"AUDIT_TRIPLESTORE_UPDATE_URI","title":"Environment variables"},{"location":"contexts/fixity/","text":"Camel Contexts: Fixity Checking Retrieving and checking the resource fixity fixity FixityChecker FixityChecker \u00abHTTP Resource\u00bb {URI} \u00abHTTP Resource\u00bb {URI} \u00abHTTP Resource\u00bb {URI}/fcr:fixity \u00abHTTP Resource\u00bb {URI}/fcr:fixity \u00abRoute\u00bb FixitySuccessDistribution \u00abRoute\u00bb FixitySuccessDistribution \u00abRoute\u00bb FixityFailureDistribution \u00abRoute\u00bb FixityFailureDistribution activemq:queue:fixity HEAD [if resource is a binary] GET RDF/XML [if success] direct:fixity.success [if failure] direct:fixity.failure When the fixity check succeeds \u00abRoute\u00bb FixitySuccessDistribution \u00abRoute\u00bb FixitySuccessDistribution \u00abRoute\u00bb FixityAudit \u00abRoute\u00bb FixityAudit \u00abRoute\u00bb FixityLog \u00abRoute\u00bb FixityLog audit.triplestore audit.triplestore \u00abCSV File\u00bb /var/log/fixity/{YYYY-MM-DD}-fixity.log \u00abCSV File\u00bb /var/log/fixity/{YYYY-MM-DD}-fixity.log direct:fixity.audit \u00abProcessor\u00bb fixityAuditSparqlProcessor activemq:queue:audit.triplestore direct:fixity.log \u00abProcessor\u00bb fixityLogSparqlProcessor file:///var/log/fixity?fileExist=Append When the fixity check fails \u00abRoute\u00bb FixityFailureDistribution \u00abRoute\u00bb FixityFailureDistribution \u00abRoute\u00bb FixityAudit \u00abRoute\u00bb FixityAudit \u00abRoute\u00bb FixityLog \u00abRoute\u00bb FixityLog \u00abRoute\u00bb FixityNotify \u00abRoute\u00bb FixityNotify audit.triplestore audit.triplestore \u00abCSV File\u00bb /var/log/fixity/{YYYY-MM-DD}-fixity.log \u00abCSV File\u00bb /var/log/fixity/{YYYY-MM-DD}-fixity.log \u00abEmail Address\u00bb lib-fcrepo-notify@umd.edu \u00abEmail Address\u00bb lib-fcrepo-notify@umd.edu direct:fixity.audit \u00abProcessor\u00bb fixityAuditSparqlProcessor activemq:queue:audit.triplestore direct:fixity.log \u00abProcessor\u00bb fixityLogSparqlProcessor file:///var/log/fixity?fileExist=Append direct:fixity.notify smtp://{SMTP_SERVER} Routes FixityChecker edu.umd.lib.camel.routes.FixityChecker Sends a request for a fixity check of a resource and returns the RDF/XML representation of that fixity check. Input message headers CamelFcrepoPath CamelFcrepoUri Environment variables REPO_INTERNAL_URL Java beans addBearerAuthorization repoExternalURL Output message format application/rdf+xml FixitySuccessDistribution edu.umd.lib.camel.routes.FixitySuccessDistribution Distributes copies of the message to the FixityAudit and FixityLog routes. FixityFailureDistribution edu.umd.lib.camel.routes.FixityFailureDistribution Distributes copies of the message to the FixityAudit , FixityLog , and FixityNotify routes. FixityAudit edu.umd.lib.camel.routes.FixityAudit Constructs an audit record to send to the AuditTriplestore route in the Audit context. Input message format application/rdf+xml Environment variables AUDIT_EVENT_BASE_URI Java beans fixityAuditSparqlProcessor Output message format application/n-triples FixityLog edu.umd.lib.camel.routes.FixityLog Constructs a one-line log message and writes it to a log file. The log message is in CSV format, where the columns are: time uri outcomes size messageDigest Note however that the log file does not contain a header line with these column names. Input message format application/rdf+xml Java beans fixityLogSparqlProcessor Output message format text/csv FixityNotify edu.umd.lib.camel.routes.FixityNotify Send an email message to lib-fcrepo-notify@umd.edu reporting a fixity check failure. The body of the email is the RDF/XML-formatted fixity check result returned from fcrepo. Input message headers CamelFcrepoUri Environment variables SMTP_SERVER Java beans repoExternalURL","title":"Fixity Checking"},{"location":"contexts/fixity/#camel-contexts-fixity-checking","text":"","title":"Camel Contexts: Fixity Checking"},{"location":"contexts/fixity/#retrieving-and-checking-the-resource","text":"fixity fixity FixityChecker FixityChecker \u00abHTTP Resource\u00bb {URI} \u00abHTTP Resource\u00bb {URI} \u00abHTTP Resource\u00bb {URI}/fcr:fixity \u00abHTTP Resource\u00bb {URI}/fcr:fixity \u00abRoute\u00bb FixitySuccessDistribution \u00abRoute\u00bb FixitySuccessDistribution \u00abRoute\u00bb FixityFailureDistribution \u00abRoute\u00bb FixityFailureDistribution activemq:queue:fixity HEAD [if resource is a binary] GET RDF/XML [if success] direct:fixity.success [if failure] direct:fixity.failure","title":"Retrieving and checking the resource"},{"location":"contexts/fixity/#when-the-fixity-check-succeeds","text":"\u00abRoute\u00bb FixitySuccessDistribution \u00abRoute\u00bb FixitySuccessDistribution \u00abRoute\u00bb FixityAudit \u00abRoute\u00bb FixityAudit \u00abRoute\u00bb FixityLog \u00abRoute\u00bb FixityLog audit.triplestore audit.triplestore \u00abCSV File\u00bb /var/log/fixity/{YYYY-MM-DD}-fixity.log \u00abCSV File\u00bb /var/log/fixity/{YYYY-MM-DD}-fixity.log direct:fixity.audit \u00abProcessor\u00bb fixityAuditSparqlProcessor activemq:queue:audit.triplestore direct:fixity.log \u00abProcessor\u00bb fixityLogSparqlProcessor file:///var/log/fixity?fileExist=Append","title":"When the fixity check succeeds"},{"location":"contexts/fixity/#when-the-fixity-check-fails","text":"\u00abRoute\u00bb FixityFailureDistribution \u00abRoute\u00bb FixityFailureDistribution \u00abRoute\u00bb FixityAudit \u00abRoute\u00bb FixityAudit \u00abRoute\u00bb FixityLog \u00abRoute\u00bb FixityLog \u00abRoute\u00bb FixityNotify \u00abRoute\u00bb FixityNotify audit.triplestore audit.triplestore \u00abCSV File\u00bb /var/log/fixity/{YYYY-MM-DD}-fixity.log \u00abCSV File\u00bb /var/log/fixity/{YYYY-MM-DD}-fixity.log \u00abEmail Address\u00bb lib-fcrepo-notify@umd.edu \u00abEmail Address\u00bb lib-fcrepo-notify@umd.edu direct:fixity.audit \u00abProcessor\u00bb fixityAuditSparqlProcessor activemq:queue:audit.triplestore direct:fixity.log \u00abProcessor\u00bb fixityLogSparqlProcessor file:///var/log/fixity?fileExist=Append direct:fixity.notify smtp://{SMTP_SERVER}","title":"When the fixity check fails"},{"location":"contexts/fixity/#routes","text":"","title":"Routes"},{"location":"contexts/fixity/#fixitychecker","text":"edu.umd.lib.camel.routes.FixityChecker Sends a request for a fixity check of a resource and returns the RDF/XML representation of that fixity check.","title":"FixityChecker"},{"location":"contexts/fixity/#input-message-headers","text":"CamelFcrepoPath CamelFcrepoUri","title":"Input message headers"},{"location":"contexts/fixity/#environment-variables","text":"REPO_INTERNAL_URL","title":"Environment variables"},{"location":"contexts/fixity/#java-beans","text":"addBearerAuthorization repoExternalURL","title":"Java beans"},{"location":"contexts/fixity/#output-message-format","text":"application/rdf+xml","title":"Output message format"},{"location":"contexts/fixity/#fixitysuccessdistribution","text":"edu.umd.lib.camel.routes.FixitySuccessDistribution Distributes copies of the message to the FixityAudit and FixityLog routes.","title":"FixitySuccessDistribution"},{"location":"contexts/fixity/#fixityfailuredistribution","text":"edu.umd.lib.camel.routes.FixityFailureDistribution Distributes copies of the message to the FixityAudit , FixityLog , and FixityNotify routes.","title":"FixityFailureDistribution"},{"location":"contexts/fixity/#fixityaudit","text":"edu.umd.lib.camel.routes.FixityAudit Constructs an audit record to send to the AuditTriplestore route in the Audit context.","title":"FixityAudit"},{"location":"contexts/fixity/#input-message-format","text":"application/rdf+xml","title":"Input message format"},{"location":"contexts/fixity/#environment-variables_1","text":"AUDIT_EVENT_BASE_URI","title":"Environment variables"},{"location":"contexts/fixity/#java-beans_1","text":"fixityAuditSparqlProcessor","title":"Java beans"},{"location":"contexts/fixity/#output-message-format_1","text":"application/n-triples","title":"Output message format"},{"location":"contexts/fixity/#fixitylog","text":"edu.umd.lib.camel.routes.FixityLog Constructs a one-line log message and writes it to a log file. The log message is in CSV format, where the columns are: time uri outcomes size messageDigest Note however that the log file does not contain a header line with these column names.","title":"FixityLog"},{"location":"contexts/fixity/#input-message-format_1","text":"application/rdf+xml","title":"Input message format"},{"location":"contexts/fixity/#java-beans_2","text":"fixityLogSparqlProcessor","title":"Java beans"},{"location":"contexts/fixity/#output-message-format_2","text":"text/csv","title":"Output message format"},{"location":"contexts/fixity/#fixitynotify","text":"edu.umd.lib.camel.routes.FixityNotify Send an email message to lib-fcrepo-notify@umd.edu reporting a fixity check failure. The body of the email is the RDF/XML-formatted fixity check result returned from fcrepo.","title":"FixityNotify"},{"location":"contexts/fixity/#input-message-headers_1","text":"CamelFcrepoUri","title":"Input message headers"},{"location":"contexts/fixity/#environment-variables_2","text":"SMTP_SERVER","title":"Environment variables"},{"location":"contexts/fixity/#java-beans_3","text":"repoExternalURL","title":"Java beans"},{"location":"contexts/routing/","text":"Camel Contexts: Initial Routing Initial Processing \u00abJMS Producer\u00bb fcrepo-webapp \u00abJMS Producer\u00bb fcrepo-webapp fedora fedora \u00abRoute\u00bb FedoraEvents \u00abRoute\u00bb FedoraEvents \u00abRoute\u00bb BatchEvents \u00abRoute\u00bb BatchEvents \u00abRoute\u00bb DetectEventType \u00abRoute\u00bb DetectEventType \u00abRoute\u00bb DetectBinary \u00abRoute\u00bb DetectBinary \u00abRoute\u00bb Distribution \u00abRoute\u00bb Distribution activemq:queue:fedora \u00abProcessor\u00bb eventProcessor [if batch user] direct:batch direct:detectEventType [else] direct:detectEventType direct:detectBinary direct:distribution Message Distribution \u00abRoute\u00bb Distribution \u00abRoute\u00bb Distribution \u00abRoute\u00bb Binaries \u00abRoute\u00bb Binaries fixitycandidates fixitycandidates images images fixity fixity index index audit audit [if binary] direct:binary [if new] activemq:queue:fixitycandidates [if image] activemq:queue:images activemq:queue:fixity activemq:queue:index activemq:queue:audit Routes FedoraEvents edu.umd.lib.camel.routes.FedoraEvents Receives messages from the fcrepo application via the fedora queue. Uses an EventProcessor bean to do some initial transformation of the JMS message produced by fcrepo into a format more suitable for handling with the Camel routes. Input message headers org.fcrepo.jms.user org.fcrepo.jms.userAgent org.fcrepo.jms.eventType org.fcrepo.jms.resourceType org.fcrepo.jms.identifier Input message format application/json OR Java Map Environment variables BATCH_USER Java beans eventProcessor Added message headers CamelFcrepoDateTime CamelFcrepoEventId CamelFcrepoEventType CamelFcrepoPath CamelFcrepoResourceType CamelFcrepoUri CamelFcrepoUser CamelFcrepoUserAgent Removed message headers All org.fcrepo.* headers. BatchEvents edu.umd.lib.camel.routes.BatchEvents Special processing for events happening during batch processing (e.g., bulk loading or importing of resources). Input message headers CamelFcrepoPath CamelFcrepoResourceType DetectEventType edu.umd.lib.camel.routes.DetectEventType Sets the CamelFcrepoEventName header based on the CamelFcrepoEventType header. Expected values are: create update delete Input message headers CamelFcrepoEventType Added message headers CamelFcrepoEventName DetectBinary edu.umd.lib.camel.routes.DetectBinary Sets the CamelFcrepoBinary header to true if the resource is a binary. Also appends either \"RDF\" or \"binary\" to the CamelFcrepoEventName header, depending on the type of resource Input message headers CamelFcrepoResourceType CamelFcrepoEventName Modified output headers CamelFcrepoEventName Added output headers CamelFcrepoBinary (only if resource is a binary) Distribution edu.umd.lib.camel.routes.Distribution Distributes the message to the Binaries route and the Auditing and Indexing contexts. Input message headers CamelFcrepoUri Binaries edu.umd.lib.camel.routes.Binaries Dispatches to additional processing that is only applicable to binary resources. If this is a \"create\" event, send a copy of this message to the fixitycandidates queue to add it to the list of resources to be regularly fixity check. If it is an image resource (i.e., MIME type image/* ), send a copy of this message to the images queue for image pre-fetching. Finally, for any binary, send a copy of this message to the Fixity route for immediate fixity checking. Input message headers CamelFcrepoEventName CamelFcrepoUri","title":"Routing"},{"location":"contexts/routing/#camel-contexts-initial-routing","text":"","title":"Camel Contexts: Initial Routing"},{"location":"contexts/routing/#initial-processing","text":"\u00abJMS Producer\u00bb fcrepo-webapp \u00abJMS Producer\u00bb fcrepo-webapp fedora fedora \u00abRoute\u00bb FedoraEvents \u00abRoute\u00bb FedoraEvents \u00abRoute\u00bb BatchEvents \u00abRoute\u00bb BatchEvents \u00abRoute\u00bb DetectEventType \u00abRoute\u00bb DetectEventType \u00abRoute\u00bb DetectBinary \u00abRoute\u00bb DetectBinary \u00abRoute\u00bb Distribution \u00abRoute\u00bb Distribution activemq:queue:fedora \u00abProcessor\u00bb eventProcessor [if batch user] direct:batch direct:detectEventType [else] direct:detectEventType direct:detectBinary direct:distribution","title":"Initial Processing"},{"location":"contexts/routing/#message-distribution","text":"\u00abRoute\u00bb Distribution \u00abRoute\u00bb Distribution \u00abRoute\u00bb Binaries \u00abRoute\u00bb Binaries fixitycandidates fixitycandidates images images fixity fixity index index audit audit [if binary] direct:binary [if new] activemq:queue:fixitycandidates [if image] activemq:queue:images activemq:queue:fixity activemq:queue:index activemq:queue:audit","title":"Message Distribution"},{"location":"contexts/routing/#routes","text":"","title":"Routes"},{"location":"contexts/routing/#fedoraevents","text":"edu.umd.lib.camel.routes.FedoraEvents Receives messages from the fcrepo application via the fedora queue. Uses an EventProcessor bean to do some initial transformation of the JMS message produced by fcrepo into a format more suitable for handling with the Camel routes.","title":"FedoraEvents"},{"location":"contexts/routing/#input-message-headers","text":"org.fcrepo.jms.user org.fcrepo.jms.userAgent org.fcrepo.jms.eventType org.fcrepo.jms.resourceType org.fcrepo.jms.identifier","title":"Input message headers"},{"location":"contexts/routing/#input-message-format","text":"application/json OR Java Map","title":"Input message format"},{"location":"contexts/routing/#environment-variables","text":"BATCH_USER","title":"Environment variables"},{"location":"contexts/routing/#java-beans","text":"eventProcessor","title":"Java beans"},{"location":"contexts/routing/#added-message-headers","text":"CamelFcrepoDateTime CamelFcrepoEventId CamelFcrepoEventType CamelFcrepoPath CamelFcrepoResourceType CamelFcrepoUri CamelFcrepoUser CamelFcrepoUserAgent","title":"Added message headers"},{"location":"contexts/routing/#removed-message-headers","text":"All org.fcrepo.* headers.","title":"Removed message headers"},{"location":"contexts/routing/#batchevents","text":"edu.umd.lib.camel.routes.BatchEvents Special processing for events happening during batch processing (e.g., bulk loading or importing of resources).","title":"BatchEvents"},{"location":"contexts/routing/#input-message-headers_1","text":"CamelFcrepoPath CamelFcrepoResourceType","title":"Input message headers"},{"location":"contexts/routing/#detecteventtype","text":"edu.umd.lib.camel.routes.DetectEventType Sets the CamelFcrepoEventName header based on the CamelFcrepoEventType header. Expected values are: create update delete","title":"DetectEventType"},{"location":"contexts/routing/#input-message-headers_2","text":"CamelFcrepoEventType","title":"Input message headers"},{"location":"contexts/routing/#added-message-headers_1","text":"CamelFcrepoEventName","title":"Added message headers"},{"location":"contexts/routing/#detectbinary","text":"edu.umd.lib.camel.routes.DetectBinary Sets the CamelFcrepoBinary header to true if the resource is a binary. Also appends either \"RDF\" or \"binary\" to the CamelFcrepoEventName header, depending on the type of resource","title":"DetectBinary"},{"location":"contexts/routing/#input-message-headers_3","text":"CamelFcrepoResourceType CamelFcrepoEventName","title":"Input message headers"},{"location":"contexts/routing/#modified-output-headers","text":"CamelFcrepoEventName","title":"Modified output headers"},{"location":"contexts/routing/#added-output-headers","text":"CamelFcrepoBinary (only if resource is a binary)","title":"Added output headers"},{"location":"contexts/routing/#distribution","text":"edu.umd.lib.camel.routes.Distribution Distributes the message to the Binaries route and the Auditing and Indexing contexts.","title":"Distribution"},{"location":"contexts/routing/#input-message-headers_4","text":"CamelFcrepoUri","title":"Input message headers"},{"location":"contexts/routing/#binaries","text":"edu.umd.lib.camel.routes.Binaries Dispatches to additional processing that is only applicable to binary resources. If this is a \"create\" event, send a copy of this message to the fixitycandidates queue to add it to the list of resources to be regularly fixity check. If it is an image resource (i.e., MIME type image/* ), send a copy of this message to the images queue for image pre-fetching. Finally, for any binary, send a copy of this message to the Fixity route for immediate fixity checking.","title":"Binaries"},{"location":"contexts/routing/#input-message-headers_5","text":"CamelFcrepoEventName CamelFcrepoUri","title":"Input message headers"},{"location":"contexts/indexing/","text":"Camel Contexts: Indexing reindex reindex index index \u00abRoute\u00bb Intake \u00abRoute\u00bb Intake \u00abRoute\u00bb Reindex \u00abRoute\u00bb Reindex index.solr index.solr index.triplestore index.triplestore activemq:queue:reindex activemq:queue:index activemq:queue:index activemq:queue:index.solr activemq:queue:index.triplestore","title":"Indexing"},{"location":"contexts/indexing/#camel-contexts-indexing","text":"reindex reindex index index \u00abRoute\u00bb Intake \u00abRoute\u00bb Intake \u00abRoute\u00bb Reindex \u00abRoute\u00bb Reindex index.solr index.solr index.triplestore index.triplestore activemq:queue:reindex activemq:queue:index activemq:queue:index activemq:queue:index.solr activemq:queue:index.triplestore","title":"Camel Contexts: Indexing"},{"location":"contexts/indexing/solr/","text":"Camel Contexts: Solr Indexing index.solr index.solr \u00abRoute\u00bb SolrIndexFilter \u00abRoute\u00bb SolrIndexFilter \u00abRoute\u00bb SolrIndex \u00abRoute\u00bb SolrIndex \u00abRoute\u00bb InsertIntoSolr \u00abRoute\u00bb InsertIntoSolr \u00abRoute\u00bb DeleteFromSolr \u00abRoute\u00bb DeleteFromSolr \u00abAPI\u00bb Solr \u00abAPI\u00bb Solr activemq:queue:index.solr direct:index.solr [if event is a deletion] direct:solr.delete HTTP POST [else] direct:solr.insert \u00abProcessor\u00bb indexingLDPathProcessor HTTP POST","title":"Solr Indexing"},{"location":"contexts/indexing/solr/#camel-contexts-solr-indexing","text":"index.solr index.solr \u00abRoute\u00bb SolrIndexFilter \u00abRoute\u00bb SolrIndexFilter \u00abRoute\u00bb SolrIndex \u00abRoute\u00bb SolrIndex \u00abRoute\u00bb InsertIntoSolr \u00abRoute\u00bb InsertIntoSolr \u00abRoute\u00bb DeleteFromSolr \u00abRoute\u00bb DeleteFromSolr \u00abAPI\u00bb Solr \u00abAPI\u00bb Solr activemq:queue:index.solr direct:index.solr [if event is a deletion] direct:solr.delete HTTP POST [else] direct:solr.insert \u00abProcessor\u00bb indexingLDPathProcessor HTTP POST","title":"Camel Contexts: Solr Indexing"},{"location":"contexts/indexing/triplestore/","text":"Camel Contexts: Triplestore Indexing index.triplestore index.triplestore \u00abRoute\u00bb TriplestoreIndexing \u00abRoute\u00bb TriplestoreIndexing \u00abRoute\u00bb IndexTriplestoreCreate \u00abRoute\u00bb IndexTriplestoreCreate \u00abRoute\u00bb IndexTriplestoreUpdate \u00abRoute\u00bb IndexTriplestoreUpdate \u00abRoute\u00bb GetRDF \u00abRoute\u00bb GetRDF \u00abRoute\u00bb IndexTriplestoreDelete \u00abRoute\u00bb IndexTriplestoreDelete \u00abRoute\u00bb IndexTriplestoreHttp \u00abRoute\u00bb IndexTriplestoreHttp \u00abAPI\u00bb Fuseki \u00abAPI\u00bb Fuseki activemq:queue:index.triplestore [if create] direct:index.triplestore.create direct:getRDF direct:index.triplestore.http HTTP [if update] direct:index.triplestore.update direct:getRDF direct:index.triplestore.http HTTP [if delete] direct:index.triplestore.delete direct:index.triplestore.http HTTP","title":"Triplestore Indexing"},{"location":"contexts/indexing/triplestore/#camel-contexts-triplestore-indexing","text":"index.triplestore index.triplestore \u00abRoute\u00bb TriplestoreIndexing \u00abRoute\u00bb TriplestoreIndexing \u00abRoute\u00bb IndexTriplestoreCreate \u00abRoute\u00bb IndexTriplestoreCreate \u00abRoute\u00bb IndexTriplestoreUpdate \u00abRoute\u00bb IndexTriplestoreUpdate \u00abRoute\u00bb GetRDF \u00abRoute\u00bb GetRDF \u00abRoute\u00bb IndexTriplestoreDelete \u00abRoute\u00bb IndexTriplestoreDelete \u00abRoute\u00bb IndexTriplestoreHttp \u00abRoute\u00bb IndexTriplestoreHttp \u00abAPI\u00bb Fuseki \u00abAPI\u00bb Fuseki activemq:queue:index.triplestore [if create] direct:index.triplestore.create direct:getRDF direct:index.triplestore.http HTTP [if update] direct:index.triplestore.update direct:getRDF direct:index.triplestore.http HTTP [if delete] direct:index.triplestore.delete direct:index.triplestore.http HTTP","title":"Camel Contexts: Triplestore Indexing"}]}